<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


        <!-- 定义缓存管理器 -->
        <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />

        <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
                <!-- session的失效时长，单位毫秒 -->
                <property name="globalSessionTimeout" value="600000"/>
                <!-- 删除失效的session -->
                <property name="deleteInvalidSessions" value="true"/>
        </bean>


        <bean id="shiroRightFilter" class="com.xiao.Filter.shiroRightFilter"></bean>

        <!--指定安全域-->
        <bean id="customRealm" class="com.xiao.common.shiro.CustomRealm">
                <property name="authenticationCachingEnabled" value="true"></property>
        </bean>

        <!--rememberMe cookie-->
        <bean id="rememberMe" class="org.apache.shiro.web.servlet.SimpleCookie">
                <constructor-arg  value="rememberMe"></constructor-arg>
                <property name="httpOnly" value="true"></property>
                <!--cookie 的最大失效时间 30天-->
                <property name="maxAge" value="259200"></property>
        </bean>

        <!--rememberMe 管理器-->
        <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
                <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"></property>
                <property name="cookie" ref="rememberMe"></property>
        </bean>

        <bean id="sslFilter" class="org.apache.shiro.web.filter.authz.SslFilter">
                <property name="port" value="8090"/>
        </bean>

        <!--form表单验证的过滤器-->
        <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
                <!--loginName 对应form表单的用户名-->
                <property name="usernameParam" value="loginName" />
                <!--password 对应form表单的密码-->
                <property name="passwordParam" value="password" />
                <!--rememberMe 记住我checkbox 是否记住我默认为false-->
                <property name="rememberMeParam" value="rememberMe" />
                <!--form 的action-->
                <property name="loginUrl" value="/shiro/doLogin" />
        </bean>

        <!--指定shiro的核心管理器-->
        <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
                <!--可以设置一个或者多个安全域-->
                <property name="realm" ref="customRealm" />
                <!-- 会话管理 -->
                <property name="sessionManager" ref="sessionManager" />
                <!--记住我-->
                <property name="rememberMeManager" ref="rememberMeManager"/>
        </bean>

        <!-- Shiro主过滤器本身功能十分强大,其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 -->
        <!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->
        <!--ShiroFilterFactoryBean 是一个shiroFilter的工厂类，负责实例化过滤器-->
        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
                <!-- Shiro的核心安全接口,这个属性是必须的 -->
                <property name="securityManager" ref="securityManager"/>
                <!-- 要求登录时的链接,当request请求被解析为需要认证则跳转到这个链接进行登录 -->
                <property name="loginUrl" value="/shiro/goLogin"/>
                <!-- 登录成功后要跳转的连接(本例中此属性用不到,因为登录成功后的处理逻辑在LoginController里硬编码为main.jsp了) -->
                <!-- <property name="successUrl" value="/system/main"/> -->
                <!-- 用户访问未对其授权的资源时,所显示的连接 -->
                <!-- 若想更明显的测试此属性可以修改它的值,如unauthor.jsp,然后用[玄玉]登录后访问/admin/listUser.jsp就看见浏览器会显示unauthor.jsp -->
                <property name="unauthorizedUrl" value="/"/>
                <property name="filters">
                        <util:map>
                                <entry key="authc" value-ref="formAuthenticationFilter"/>
                                <entry key="ssl" value-ref="sslFilter"/>
                        </util:map>
                </property>
                <!-- Shiro连接约束配置,即过滤链的定义 -->
                <!-- 此处可配合这篇文章来理解各个过滤连的作用http://blog.csdn.net/jadyer/article/details/12172839 -->
                <!-- 下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的 -->
                <!--shiro的默认过滤器分为两种：认证过滤器：anon，authcBasic，auchc，user 和授权过滤器：perms，roles，ssl，rest，port-->
                <!-- anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种 -->
                <!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
                <!-- user: 表示身份验证通过，或者记住我-->
                <!-- rememberMe:记住我设置后不用再需要登录-->
                <property name="filterChainDefinitions">
                        <value>
                                <!--需要安全连接的地址，配置ssl过滤器-->
                                /index.jsp = ssl
                                <!--配置记住我拦截-->
                                /shiro/userInfo=user
                              <!--  /mydemo/login=anon
                                /mydemo/getVerifyCodeImage=anon
                                /main**=authc
                                /user/info**=authc
                                /admin/listUser**=authc,perms[admin:manage]-->
                        </value>
                </property>
        </bean>



</beans>